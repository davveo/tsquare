basePath: /v1
definitions:
  handler.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      message:
        type: string
    type: object
  model.UserInfo:
    properties:
      createdAt:
        example: "2020-03-23 20:00:00"
        type: string
      id:
        example: 1
        type: integer
      password:
        example: 9dXd13#k$1123!kln
        type: string
      updatedAt:
        example: "2020-03-23 20:00:00"
        type: string
      username:
        example: 张三
        type: string
    type: object
  model.UserModel:
    properties:
      avatar:
        type: string
      last_login_ip:
        type: string
      last_login_time:
        type: string
      password:
        type: string
      phone:
        type: integer
      sex:
        type: integer
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact:
    name: 1024casts/snake
    url: http://www.swagger.io/support
  description: snake demo
  license: {}
  title: snake Example API
  version: "1.0"
paths:
  /sd/cpu:
    get:
      consumes:
      - application/json
      description: Checks the cpu usage
      produces:
      - application/json
      responses:
        "200":
          description: 'CRITICAL - Load average: 1.78, 1.99, 2.02 | Cores: 2'
          schema:
            type: string
      summary: Checks the cpu usage
      tags:
      - sd
  /sd/disk:
    get:
      consumes:
      - application/json
      description: Checks the disk usage
      produces:
      - application/json
      responses:
        "200":
          description: 'OK - Free space: 17233MB (16GB) / 51200MB (50GB) | Used: 33%'
          schema:
            type: string
      summary: Checks the disk usage
      tags:
      - sd
  /sd/health:
    get:
      consumes:
      - application/json
      description: Shows OK as the ping-pong result
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Shows OK as the ping-pong result
      tags:
      - sd
  /sd/ram:
    get:
      consumes:
      - application/json
      description: Checks the ram usage
      produces:
      - application/json
      responses:
        "200":
          description: 'OK - Free space: 402MB (0GB) / 8192MB (8GB) | Used: 4%'
          schema:
            type: string
      summary: Checks the ram usage
      tags:
      - sd
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: The user's database id index num
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"message":"OK","data":null}'
          schema:
            $ref: '#/definitions/handler.Response'
            type: object
      summary: Delete an user by the user identifier
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: Update a user by ID
      parameters:
      - description: The user's database id index num
        in: path
        name: id
        required: true
        type: integer
      - description: The user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserModel'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"message":"OK","data":null}'
          schema:
            $ref: '#/definitions/handler.Response'
            type: object
      summary: Update a user info by the user identifier
      tags:
      - 用户
  /users/login:
    post:
      description: 仅限手机登录
      parameters:
      - description: 登录信息
        in: body
        name: req
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"message":"OK","data":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MjgwMTY5MjIsImlkIjowLCJuYmYiOjE1MjgwMTY5MjIsInVzZXJuYW1lIjoiYWRtaW4ifQ.LjxrK9DuAwAzUD8-9v43NzWBN7HXsSLfebw92DKd1JQ"}}'
          schema:
            type: string
      summary: 用户登录接口 Done
      tags:
      - 用户
  /users/me:
    get:
      consumes:
      - application/json
      description: Get an user by user id
      produces:
      - application/json
      responses:
        "200":
          description: 个人用户信息
          schema:
            $ref: '#/definitions/model.UserInfo'
            type: object
      summary: 获取自己的个人信息 Done
      tags:
      - 用户
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get an user by user id
      parameters:
      - description: 用户id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 用户信息
          schema:
            $ref: '#/definitions/model.UserInfo'
            type: object
      summary: 通过用户id获取用户信息 Done
      tags:
      - 用户
  /users/vcode:
    get:
      consumes:
      - application/json
      description: Get an user by username
      parameters:
      - description: 区域码，比如86
        in: query
        name: area_code
        required: true
        type: string
      - description: 手机号
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
            type: object
      summary: 根据手机号获取校验码 Done
      tags:
      - 用户
swagger: "2.0"
